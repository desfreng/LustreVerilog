node shift_left(x: r8) returns (res: r8);
let
    res = x[0:7] ++ false;
tel

node shift_right(x: r8) returns (res: r8);
let
    res = false ++ x[1:8];
tel

node multiply_pass(x, y, res: u8) returns (new_x, new_y, new_res: u8);
var raw_x: r8;
let
    raw_x = raw x;
    new_x = unsigned shift_right(raw x);
    new_y = unsigned shift_left(raw y);
    new_res = res + (if raw_x[0] then y else 0);
tel

node multiply(x, y: u8) returns (res: u8);
var x1, y1, r1,
    x2, y2, r2,
    x3, y3, r3,
    x4, y4, r4,
    x5, y5, r5,
    x6, y6, r6,
    x7, y7, r7,
    x8, y8, r8,
    x9, y9: u8;

let
    (x1, y1, r1) = (0, 0, 0) fby (x, y, 0);
    (x2, y2, r2) = (0, 0, 0) fby multiply_pass(x1, y1, r1);
    (x3, y3, r3) = (0, 0, 0) fby multiply_pass(x2, y2, r2);
    (x4, y4, r4) = (0, 0, 0) fby multiply_pass(x3, y3, r3);
    (x5, y5, r5) = (0, 0, 0) fby multiply_pass(x4, y4, r4);
    (x6, y6, r6) = (0, 0, 0) fby multiply_pass(x5, y5, r5);
    (x7, y7, r7) = (0, 0, 0) fby multiply_pass(x6, y6, r6);
    (x8, y8, r8) = (0, 0, 0) fby multiply_pass(x7, y7, r7);
    (x9, y9, res) = (0, 0, 0) fby multiply_pass(x8, y8, r8);
tel

node main(x, y: u8) returns (res: u8);
let
    res = multiply(x, y);
tel
